@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@if (Errors != null)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <div class="form-group">
                <label for="password_confirm">Confirm Password</label>
                <InputText Id="password_confirm" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@if (Messages != null)
{
    <div class="alert alert-primary" role="alert">
       @foreach(var message in Messages)
        {
            <p>@message</p>
        }
    </div>
}

@code {

    private RegisterModel RegisterModel = new RegisterModel();

    private IEnumerable<string> Errors;
    private IEnumerable<string> Messages;

    private async System.Threading.Tasks.Task HandleRegistration()
    {
        var result = await AuthService.RegisterAsync(RegisterModel);

        if (result.Successful)
            Messages = result.Messages;
        else
            Errors = result.Errors;
    }
}